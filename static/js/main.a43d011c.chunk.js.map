{"version":3,"sources":["App.module.scss","layouts/CreateDictation.module.scss","components/Button.module.scss","components/AlertBox.module.scss","components/Container.module.scss","components/NavBar.module.scss","components/Question.module.scss","components/Input.module.scss","components/Timer.module.scss","components/WordInput.module.scss","components/RadioRow.module.scss","components/FileInput.module.scss","components/Container.jsx","components/Button.jsx","components/NavBar.jsx","speaker_icon.svg","components/Input.jsx","components/Question.jsx","components/Timer.jsx","components/AlertBox.jsx","layouts/DoDictation.jsx","components/WordInput.jsx","components/RadioRow.jsx","components/FileInput.jsx","layouts/CreateDictation.jsx","utils/downloadAsFile.js","App.jsx","reportWebVitals.js","index.jsx"],"names":["module","exports","Container","className","children","styles","container","filter","name","join","Button","color","isSmall","onClick","disabled","button","small","primary","secondary","gray","danger","colorStyle","NavBar","onPageChange","navBar","navBarContainer","logo","Input","placeholder","value","onChange","error","success","input","Question","isCorrect","word","voice","utterance","useMemo","newUtterance","SpeechSynthesisUtterance","question","window","speechSynthesis","speak","src","speakerIconUrl","alt","speakerImage","questionInput","e","target","Timer","remainingTime","remainingMin","Math","floor","containerStyles","wrapper","timer","AlertBox","title","btnOnClick","alertBoxWrapper","alertBox","text","btnRow","DoDictation","time","useState","setVoice","dictation","setDictation","userValues","setUserValues","score","setScore","timeoutIdRef","useRef","setRemainingTime","isCountingDown","setIsCountingDown","isAlert","setIsAlert","totalWordsCount","words","length","onFileOpen","useCallback","inputEvent","files","file","fileReader","FileReader","onload","result","JSON","parse","map","readAsText","useEffect","document","createElement","setAttribute","addEventListener","style","display","body","appendChild","click","removeChild","submitOnClick","reduce","totalScore","i","clearTimeout","current","timeoutId","console","log","setTimeout","selectVoice","voices","getVoices","primaryVoice","find","undefined","englishVoice","lang","onvoiceschanged","btnType","newValue","newUserValues","submitRow","pass","fail","round","WordInput","plusBtnOnClick","minusBtnOnClick","wordInputBar","RadioRow","isChecked","label","createDicStyle","radioRowWrapper","radioBtn","type","checked","FileInput","inputRef","accept","fileInputStyles","hiddenInput","ref","CreateDictation","React","setWords","setTitle","radioValue","setRadioValue","setTime","newArray","splice","radioBtnOnClick","clearDictation","appStyles","questionsContainer","content","fileName","a","encodeURIComponent","downloadAsFile","stringify","App","page","setPage","pages","bodyContainer","tab","Date","getTime","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a43d011c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bodyContainer\":\"App_bodyContainer__3rOsc\",\"questionsContainer\":\"App_questionsContainer__rogn6\",\"submitRow\":\"App_submitRow__3-Thd\",\"pass\":\"App_pass__1OdCe\",\"fail\":\"App_fail__2L5CD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CreateDictation_wrapper__3uS4z\",\"radioRowWrapper\":\"CreateDictation_radioRowWrapper__j8HrK\",\"text\":\"CreateDictation_text__hay6F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__LwMAv\",\"small\":\"Button_small__3g1wS\",\"primary\":\"Button_primary__qrr19\",\"secondary\":\"Button_secondary__1sG9u\",\"gray\":\"Button_gray__1CwZu\",\"danger\":\"Button_danger__2AbMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertBox\":\"AlertBox_alertBox__1Cz2A\",\"text\":\"AlertBox_text__3LoEw\",\"btnRow\":\"AlertBox_btnRow__z6wLN\",\"alertBoxWrapper\":\"AlertBox_alertBoxWrapper__2gz0e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__lHqDY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__3h6Ps\",\"navBarContainer\":\"NavBar_navBarContainer__27UHj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"question\":\"Question_question__3Vj_o\",\"questionInput\":\"Question_questionInput__3Qdsk\",\"speakerImage\":\"Question_speakerImage__1TIsM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__119AQ\",\"success\":\"Input_success__TyCV7\",\"error\":\"Input_error__DPuVX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Timer_wrapper__1Es_h\",\"timer\":\"Timer_timer__l0bKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wordInputBar\":\"WordInput_wordInputBar__2ImGx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"RadioRow_radioBtn__F-0a9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hiddenInput\":\"FileInput_hiddenInput__3DHU0\"};","import React from 'react'\nimport styles from './Container.module.scss'\n\nconst Container = ({ className = null, children }) => (\n  <div\n    className={\n      [\n        styles.container,\n        className\n      ]\n        .filter(name => name !== null)\n        .join(' ')\n    }>\n    {children}\n  </div>\n)\n\nexport default Container\n","import React from 'react'\nimport styles from './Button.module.scss'\n\nconst Button = (\n  {\n    color,\n    isSmall = false,\n    onClick,\n    children,\n    disabled\n  }\n) => {\n  const colorStyle = () => {\n    switch (color) {\n      case 'primary':\n        return styles.primary\n      case 'secondary':\n        return styles.secondary\n      case 'gray':\n        return styles.gray\n      case 'danger':\n        return styles.danger\n      default:\n        return null\n    }\n  }\n\n  return (\n    <button\n      className={\n        [\n          styles.button,\n          isSmall === true ? styles.small : null,\n          colorStyle()\n        ]\n          .filter(name => name !== null)\n          .join(' ')\n      }\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport Container from './Container'\nimport styles from './NavBar.module.scss'\nimport Button from './Button'\n\nconst NavBar = ({ onPageChange }) => (\n  <div className={styles.navBar}>\n    <Container className={styles.navBarContainer}>\n      <div className={styles.logo}>Dictation</div>\n      <Button onClick={() => onPageChange('Do Dictation')} isSmall color={'primary'}>Do Dictation</Button>\n      <Button color={'primary'} onClick={() => {onPageChange('Make Dictation')}} isSmall>Make Dictation</Button>\n    </Container>\n  </div>\n)\n\nexport default NavBar\n","export default __webpack_public_path__ + \"static/media/speaker_icon.32742772.svg\";","import React from 'react'\nimport styles from './Input.module.scss'\n\nconst Input = ({ placeholder = null, value, onChange, error = false, success = false, className = null, onClick }) =>\n  (\n    <input\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n      className={[\n        styles.input,\n        error !== false ? styles.error : null,\n        success !== false ? styles.success : null,\n        className\n      ].filter(name => name !== null).join(' ')}\n      onClick={onClick}\n    />\n  )\n\nexport default Input\n","import React, { useMemo } from 'react'\nimport speakerIconUrl from '../speaker_icon.svg'\nimport Button from './Button'\nimport styles from './Question.module.scss'\nimport Input from './Input'\n\nconst Question = ({ isCorrect, placeholder, word, onChange, value, voice }) => {\n  const utterance = useMemo(() => {\n    const newUtterance = new SpeechSynthesisUtterance(word)\n    newUtterance.voice = voice\n    return newUtterance\n  }, [word, voice])\n\n  const onButtonClick = () => {\n    window.speechSynthesis.speak(utterance)\n  }\n\n  return (\n    <div className={styles.question}>\n      <Button onClick={onButtonClick} color={'secondary'}>\n        <img src={speakerIconUrl} alt=\"Play Audio\" className={styles.speakerImage}/>\n      </Button>\n      <Input\n        placeholder={placeholder}\n        success={isCorrect === true}\n        error={isCorrect === false}\n        value={value}\n        className={styles.questionInput}\n        onChange={(e) => {\n          onChange(e.target.value)\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Question\n","import React from 'react'\nimport styles from './Timer.module.scss'\nimport containerStyles from './Container.module.scss'\n\nconst Timer = ({ remainingTime }) => {\n  const remainingMin = Math.floor(remainingTime / 60)\n  if (remainingTime > 60) {\n    remainingTime = remainingTime - remainingMin * 60\n  }\n\n  return (\n    <div className={containerStyles.container + ' ' + styles.wrapper}>\n      <div className={styles.timer}>\n        <div>\n          Remaining Time\n        </div>\n        <div>\n          {remainingMin < 10 ? '0' + remainingMin : remainingMin}\n          :\n          {remainingTime < 10 ? '0' + remainingTime : remainingTime}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Timer\n","import React from 'react'\nimport Button from './Button'\nimport styles from './AlertBox.module.scss'\n\nconst AlertBox = ({ title, btnOnClick }) => (\n  <div className={styles.alertBoxWrapper}>\n    <div className={styles.alertBox}>\n      <div className={styles.text}>\n        <div>The {title} test will start.</div>\n\n        <div>Are you ready?</div>\n      </div>\n\n      <div className={styles.btnRow}>\n        <Button color=\"primary\" onClick={() => btnOnClick('yes')}>Yes</Button>\n        <Button color=\"gray\" onClick={() => btnOnClick('cancel')}>Cancel</Button>\n      </div>\n    </div>\n  </div>\n)\n\nexport default AlertBox\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport Question from '../components/Question'\nimport styles from '../App.module.scss'\nimport Button from '../components/Button'\nimport Timer from '../components/Timer'\nimport AlertBox from '../components/AlertBox'\n\n// Assuming the browser has at least one voice.\nconst PRIMARY_VOICE_NAME = 'Google UK English Male'\nconst LANG = 'en-US'\n\nconst DoDictation = ({ time }) => {\n  const [voice, setVoice] = useState(null)\n\n  const [dictation, setDictation] = useState(null)\n  const [userValues, setUserValues] = useState([])\n  const [score, setScore] = useState(null)\n\n  const timeoutIdRef = useRef(null)\n  const [remainingTime, setRemainingTime] = useState(null)\n  const [isCountingDown, setIsCountingDown] = useState(null)\n\n  const [isAlert, setIsAlert] = useState(false)\n\n  const totalWordsCount = dictation?.words.length\n\n  const onFileOpen = useCallback((inputEvent) => {\n    if (inputEvent.target.files.length === 0) {\n      return\n    }\n\n    const file = inputEvent.target.files[0]\n    const fileReader = new FileReader()\n    fileReader.onload = () => {\n      /** @type {string} */\n      const text = fileReader.result\n      const dictation = JSON.parse(text)\n      setUserValues(dictation.words.map(() => ''))\n      setDictation(dictation)\n    }\n\n    fileReader.readAsText(file)\n\n    setScore(null)\n  }, [])\n\n  useEffect(() => {\n    const input = document.createElement('input')\n    input.setAttribute('type', 'file')\n    input.setAttribute('accept', 'application/json,.dictation')\n    input.addEventListener('change', onFileOpen)\n    input.style.display = 'none'\n    document.body.appendChild(input)\n    input.click()\n    document.body.removeChild(input)\n  }, [onFileOpen, time])\n\n  const submitOnClick = useCallback(() => {\n    if (dictation !== null) {\n      setScore(userValues.reduce((totalScore, value, i) => totalScore + (dictation.words[i] === value ? 1 : 0), 0))\n      clearTimeout(timeoutIdRef.current)\n    }\n  }, [dictation, userValues])\n\n  useEffect(() => {\n    if (dictation !== null) {\n      setIsCountingDown(false)\n      const timeoutId = timeoutIdRef.current\n      if (typeof timeoutId === 'number') {\n        clearTimeout(timeoutId)\n      }\n      setRemainingTime(dictation.time ?? dictation.words.length * 10)\n      console.log('dictation changed')\n    }\n  }, [dictation])\n\n  /*\n   * if remaining time is larger than 0, the remaining time is decreased by 1 every 1000 ms. When the remaining time\n   * changes, setTimeOut is called again.\n   */\n  useEffect(() => {\n    console.log(remainingTime)\n    if (remainingTime === 0 || remainingTime === null) {\n      return\n    }\n    if (isCountingDown) {\n      console.log(remainingTime + 'will count down')\n      timeoutIdRef.current = setTimeout(() => { setRemainingTime(remainingTime - 1) }, 1000)\n    }\n  }, [remainingTime, isCountingDown])\n\n  // Specifically for when the time is out to end the test\n  useEffect(() => {\n    if (remainingTime === 0) {\n      submitOnClick()\n    }\n  }, [remainingTime, submitOnClick])\n\n  useEffect(() => {\n    if (dictation !== null) {\n      setIsAlert(true)\n    } else {setIsAlert(false)}\n  }, [dictation])\n\n  const alertBoxBtnOnClick = (btnType) => {\n    if (btnType === 'cancel') {\n      setDictation(null)\n    } else if (btnType === 'yes') {\n      setIsCountingDown(true)\n    }\n\n    setIsAlert(false)\n  }\n\n  useEffect(() => {\n    const selectVoice = () => {\n      const voices = window.speechSynthesis.getVoices()\n      const primaryVoice = voices.find(voice => voice.name === PRIMARY_VOICE_NAME)\n      if (primaryVoice !== undefined) {\n        setVoice(primaryVoice)\n        return\n      }\n\n      const englishVoice = voices.find(voice => voice.lang === LANG)\n      if (englishVoice !== undefined) {\n        setVoice(englishVoice)\n        return\n      }\n\n      setVoice(voices[0])\n    }\n\n    selectVoice()\n    if (window.speechSynthesis.onvoiceschanged !== undefined) {\n      window.speechSynthesis.onvoiceschanged = selectVoice\n    }\n  }, [])\n\n  return (\n    //isOpenFile is needed because if not, it will try to read the content of the dictation file, which when\n    //isOpeningFile is true, is null.\n    dictation !== null\n      ? (\n        <>\n          {isAlert\n            ? (\n              <AlertBox title={dictation.title} btnOnClick={alertBoxBtnOnClick}/>\n            )\n            : null}\n\n          <h1>{dictation.title}</h1>\n          {dictation.words.map((word, i) => (\n            <Question\n              key={i}\n              isCorrect={null}\n              placeholder={'Question ' + (i + 1)}\n              voice={voice}\n              onChange={(newValue) => {\n                const newUserValues = [...userValues]\n                newUserValues[i] = newValue\n                setUserValues(newUserValues)\n              }}\n              word={word}\n              value={userValues[i]}\n            />\n          ))}\n          <div className={styles.submitRow}>\n            <Button color={'primary'} onClick={submitOnClick} disabled={score !== null}>Submit</Button>\n            {\n              score !== null\n                ? (\n                  <p className={score / totalWordsCount >= 0.5 ? styles.pass : styles.fail}>\n                    {score}/{totalWordsCount} ({Math.round(10 * score / totalWordsCount * 100) / 10}%)\n                  </p>\n                )\n                : null\n            }\n          </div>\n          <Timer remainingTime={remainingTime}/>\n        </>\n      )\n      : null\n  )\n}\n\nexport default DoDictation\n","import React from 'react'\nimport Input from './Input'\nimport Button from './Button'\nimport styles from './WordInput.module.scss'\n\nconst WordInput = ({ i, value, onChange, plusBtnOnClick, minusBtnOnClick }) => {\n  return (\n    <div className={styles.wordInputBar}>\n      <p>{i + 1}.</p>\n      <Input onChange={(e) => onChange(e.target.value, i)} value={value}/>\n      <Button onClick={() => plusBtnOnClick(i)} color={'secondary'}>+</Button>\n      <Button onClick={() => minusBtnOnClick(i)} color={'secondary'}>−</Button>\n    </div>\n  )\n}\n\nexport default WordInput\n","import React from 'react'\nimport createDicStyle from '../layouts/CreateDictation.module.scss'\nimport styles from './RadioRow.module.scss'\n\nconst RadioRow = ({ isChecked, value, onClick, label }) => {\n  return (\n    <div className={createDicStyle.radioRowWrapper} onClick={() => {onClick(value)}}>\n      <input className={styles.radioBtn}\n             type=\"radio\"\n             checked={isChecked}\n      />\n\n      <label\n        className={createDicStyle.text}\n      >{label}</label>\n    </div>\n  )\n}\n\nexport default RadioRow\n","import React, { useRef } from 'react'\nimport fileInputStyles from './FileInput.module.scss'\nimport Button from './Button'\n\nconst FileInput = (\n  {\n    color,\n    isSmall = false,\n    onChange,\n    label\n  }\n) => {\n  const inputRef = useRef(null)\n\n  const labelOnClick = () => {\n    const input = inputRef.current\n    if (input !== null) {\n      input.click()\n    }\n  }\n\n  return (\n    <>\n      <Button\n        color={color}\n        isSmall={isSmall}\n        onClick={labelOnClick}\n      >\n        {label}\n      </Button>\n      <input\n        type=\"file\"\n        accept=\"application/json,.dictation\"\n        onChange={(e) => {\n          onChange(e)\n          e.target.value = null\n        }}\n        className={fileInputStyles.hiddenInput}\n        ref={inputRef}\n      />\n    </>\n\n  )\n}\n\nexport default FileInput\n","import React from 'react'\nimport appStyles from '../App.module.scss'\nimport Input from '../components/Input'\nimport Button from '../components/Button'\nimport WordInput from '../components/WordInput'\nimport styles from './CreateDictation.module.scss'\nimport { downloadAsFile } from '../utils/downloadAsFile'\nimport RadioRow from '../components/RadioRow'\nimport FileInput from '../components/FileInput'\n\nconst CreateDictation = () => {\n  const [words, setWords] = React.useState([''])\n  const [title, setTitle] = React.useState(null)\n  const [radioValue, setRadioValue] = React.useState(null)\n  const [time, setTime] = React.useState(null)\n\n  const onChange = (value, i) => {\n    const newArray = [...words]\n    newArray[i] = value\n    setWords(newArray)\n  }\n\n  const plusBtnOnClick = (i) => {\n    const newArray = [...words]\n    newArray.splice(i + 1, 0, '')\n    setWords(newArray)\n  }\n\n  const minusBtnOnClick = (i) => {\n    if (words.length !== 1) {\n      const newArray = [...words]\n      newArray.splice(i, 1)\n      setWords(newArray)\n    }\n  }\n\n  const download = () => {\n    const dictation = {\n      title,\n      words,\n      time\n    }\n    const output = JSON.stringify(dictation)\n    downloadAsFile(output, title + '.dictation')\n  }\n\n  const radioBtnOnClick = (value) => {\n    setRadioValue(value)\n\n    if (value === 'default') {\n      setTime(null)\n    }\n  }\n\n  const timeInputOnChange = (value) => {\n    setTime(value)\n  }\n\n  const loadDictation = (e) => {\n    if (e.target.files.length === 0) {\n      return\n    }\n\n    const file = e.target.files[0]\n    const fileReader = new FileReader()\n    fileReader.onload = () => {\n      clearDictation()\n      /** @type {string} */\n      const text = fileReader.result\n      const dictation = JSON.parse(text)\n      setTitle(dictation.title)\n      setWords(dictation.words)\n      if (dictation.time === null) {\n        setRadioValue('default')\n      } else {\n        setRadioValue('setYourOwn')\n        setTime(dictation.time)\n      }\n    }\n    fileReader.readAsText(file)\n  }\n\n  const clearDictation = () => {\n    setTime('')\n    setRadioValue('default')\n    setTitle('')\n    setWords([''])\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={appStyles.submitRow}>\n        <FileInput onChange={loadDictation} color={'primary'} label={'Load Dictation...'}/>\n        <Button color={'danger'} onClick={clearDictation}>Clear Dictation</Button>\n      </div>\n\n      <div>\n        <h3>Title</h3>\n        <Input onChange={(e) => {setTitle(e.target.value)}} value={title}/>\n      </div>\n\n      <div>\n        <h3>Words</h3>\n        <div className={appStyles.questionsContainer}>\n          {\n            words.map((word, i) => (\n              <div className={appStyles.wrapper} key={i}>\n                <WordInput\n                  i={i}\n                  value={word}\n                  onChange={onChange}\n                  plusBtnOnClick={plusBtnOnClick}\n                  minusBtnOnClick={minusBtnOnClick}\n                />\n              </div>\n            ))\n          }\n        </div>\n      </div>\n\n      <div>\n        <h3>Time limit</h3>\n        <div className={styles.radioRowWrapper}>\n          <RadioRow\n            i={0}\n            label={'Use default time'}\n            onClick={radioBtnOnClick}\n            value={'default'}\n            isChecked={radioValue === 'default'}\n          />\n        </div>\n        <div className={styles.radioRowWrapper}>\n          <RadioRow\n            i={1}\n            label={'Set your own time(seconds):'}\n            value={'setYourOwn'}\n            onClick={radioBtnOnClick}\n            isChecked={radioValue === 'setYourOwn'}\n          />\n          <Input\n            value={time}\n            onChange={(e) => {timeInputOnChange(e.target.value)}}\n            onClick={() => radioBtnOnClick('setYourOwn')}\n          />\n        </div>\n      </div>\n\n      <div className={appStyles.submitRow}>\n        <Button color={'primary'} onClick={download}>Download file</Button>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateDictation\n","export const downloadAsFile = (content, fileName) => {\n  const a = document.createElement('a')\n  a.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(content))\n  a.setAttribute('download', fileName)\n\n  a.style.display = 'none'\n  document.body.appendChild(a)\n  a.click()\n  document.body.removeChild(a)\n}\n","import styles from './App.module.scss'\nimport NavBar from './components/NavBar'\nimport React, { useState } from 'react'\nimport Container from './components/Container'\nimport DoDictation from './layouts/DoDictation'\nimport CreateDictation from './layouts/CreateDictation'\n\nconst App = () => {\n  const [page, setPage] = useState('Home')\n  const [time, setTime] = useState(null)\n\n  const onPageChange = (tab) => {\n    setPage(tab)\n    setTime((new Date()).getTime())\n  }\n\n  const pages = {\n    'Do Dictation': <DoDictation time={time}/>,\n    'Make Dictation': <CreateDictation/>\n  }\n\n  return (\n    <div className={styles.bodyContainer}>\n      <NavBar onPageChange={onPageChange}/>\n      <Container className={styles.questionsContainer}>\n        {pages[page]}\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}